import dependencies.Deps
import dependencies.BuildConfig

apply plugin: 'kotlin-multiplatform'
apply plugin: 'com.android.library'
apply plugin: 'com.alecstrong.cocoapods'
apply plugin: 'kotlinx-serialization'
apply plugin: 'com.squareup.sqldelight'

android {
    compileSdkVersion BuildConfig.compileSdk

    defaultConfig {
        minSdkVersion BuildConfig.minSdk
    }
    
    dataBinding {
        enabled = true
    }
}

dependencies {
    implementation Deps.AndroidX.appCompat
    implementation Deps.AndroidX.lifecycleExtension
    implementation Deps.OkHttp.logging
    api Deps.timber
}

kotlin {
    sourceSets {
        commonMain {
            kotlin {
                srcDirs 'build/sqldelight'
            }
            dependencies {
                implementation Deps.Kotlin.Stdlib.common
                implementation Deps.Kotlin.Coroutines.common
                implementation Deps.Kotlin.Serialization.common
                implementation Deps.Ktor.Client.core
                implementation Deps.Ktor.Client.Json.core
            }
        }

        androidMain {
            dependencies {
                implementation Deps.Kotlin.Stdlib.jdk
                implementation Deps.Kotlin.Coroutines.jdk
                implementation Deps.Kotlin.Coroutines.android
                implementation Deps.Kotlin.Serialization.jdk
                implementation Deps.Ktor.Client.okhttp
                implementation Deps.Ktor.Client.Json.jvm
                implementation Deps.SqlDelight.android
            }
        }

        iosMain {
            dependencies {
                implementation Deps.Kotlin.Coroutines.native
                implementation Deps.Kotlin.Serialization.native
                implementation Deps.Ktor.Client.ios
                implementation Deps.Ktor.Client.Json.ios
                implementation Deps.SqlDelight.ios
            }
        }
    }

    android()

    targetForCocoapods([presets.iosArm64, presets.iosX64], 'ios') {
        compilations.main {
            extraOpts "-Xuse-experimental=kotlin.Experimental",
                "-Xuse-experimental=kotlin.ExperimentalMultiplatform"
        }
        compilations.each {
            it.extraOpts("-linker-options", "-lsqlite3")
        }
    }
}

// workaround for https://youtrack.jetbrains.com/issue/KT-27170
configurations {
    compileClasspath
}

sqldelight {
    packageName = "com.github.watabee.rakutenranking.db"
}

task setupIos(type: Exec) {
    workingDir "${rootDir}/ios"
    commandLine "sh", "./scripts/setup.sh", propOrEnv("RAKUTEN_APP_ID")
}

// Execute './gradlew :common:generatePodspec', then generate podspec file.
cocoapods {
    version = BuildConfig.versionName
    homepage = "https://github.com/watabee/RakutenRankingKotlin"
    deploymentTarget = "11.0"
    authors = "watabee"
    license = ""
    summary = "common"
    daemon = true
}
