// Top-level build file where you can add configuration options common to all sub-projects/modules.
import dependencies.Versions

buildscript {
    repositories {
        google()
        mavenCentral()
        jcenter()
        maven { url "https://kotlin.bintray.com/kotlinx" }
        maven { url "https://dl.bintray.com/jetbrains/kotlin-native-dependencies" }
    }
    dependencies {
        classpath 'com.android.tools.build:gradle:3.3.2'
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:${Versions.kotlin}"
        classpath "org.jetbrains.kotlin:kotlin-serialization:${Versions.kotlin}"
        classpath "com.squareup.sqldelight:gradle-plugin:${Versions.sqldelight}"
        classpath "com.diffplug.spotless:spotless-plugin-gradle:3.17.0"
        classpath 'com.alecstrong:cocoapods-gradle-plugin:0.3.1'
        classpath 'com.codingfeline.buildkonfig:buildkonfig-gradle-plugin:0.3.1'
    }
}

allprojects {
    repositories {
        google()
        jcenter()
        maven { url "https://kotlin.bintray.com/kotlinx" }
        maven { url "https://dl.bintray.com/kotlin/ktor" }
    }

    configurations.all {
        resolutionStrategy {
            eachDependency { details ->
                if (details.requested.group == 'com.squareup.okhttp3') {
                    details.useVersion Versions.okhttp
                }
            }
        }
    }
}

subprojects {
    apply plugin: 'com.diffplug.gradle.spotless'
    spotless {
        kotlin {
            target "**/*.kt"
            ktlint(Versions.ktlint)
        }
    }

    afterEvaluate {
        def preBuildTask = tasks.findByName("preBuild")
        if (preBuildTask != null) {
            preBuild.dependsOn spotlessKotlinApply
            return
        }

        def compileKotlinTask = tasks.findByName("compileKotlin")
        if (compileKotlinTask != null) {
            compileKotlin.dependsOn spotlessKotlinApply
            return
        }
    }
}

task clean(type: Delete) {
    delete rootProject.buildDir
}
