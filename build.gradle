// Top-level build file where you can add configuration options common to all sub-projects/modules.
import dependencies.Versions

buildscript {
    repositories {
        google()
        mavenCentral()
        jcenter()
        maven { url "https://kotlin.bintray.com/kotlinx" }
        maven { url "https://dl.bintray.com/jetbrains/kotlin-native-dependencies" }
    }
    dependencies {
        classpath 'com.android.tools.build:gradle:3.3.2'
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:${Versions.kotlin}"
        classpath "org.jetbrains.kotlin:kotlin-serialization:${Versions.kotlin}"
        classpath "com.squareup.sqldelight:gradle-plugin:${Versions.sqldelight}"
        classpath "com.diffplug.spotless:spotless-plugin-gradle:3.17.0"
        classpath 'com.alecstrong:cocoapods-gradle-plugin:0.3.2'
        classpath 'com.codingfeline.buildkonfig:buildkonfig-gradle-plugin:0.3.1'
    }
}

allprojects {
    repositories {
        maven {
            url "https://maven.google.com"
            content {
                includeGroupByRegex "androidx.*"
                includeGroupByRegex "com\\.android.*"
            }
        }
        maven {
            url "https://kotlin.bintray.com/kotlinx"
            content {
                includeGroup "org.jetbrains.kotlinx"
            }
        }
        maven {
            url "https://repo.maven.apache.org/maven2/"
            content {
                includeGroup "org.jetbrains"
                includeGroup "org.jetbrains.kotlin"
                includeGroup "org.jetbrains.intellij.deps"
                includeGroup "co.touchlab"
                includeGroup "com.github.bumptech.glide"
                includeGroup "com.jakewharton.timber"
                includeGroupByRegex "com\\.squareup.*"
                includeGroup "org.slf4j"
                includeGroup "com.typesafe"
                includeGroup "org.sonatype.oss"
                includeGroup "commons-io"
                includeGroup "commons-codec"
                includeGroup "commons-logging"
                includeGroup "org.antlr"
                includeGroup "com.googlecode.juniversalchardet"
                includeGroup "com.googlecode.json-simple"
                includeGroup "com.google.guava"
                includeGroup "com.google.errorprone"
                includeGroup "com.google.j2objc"
                includeGroup "com.google.jimfs"
                includeGroup "com.google.protobuf"
                includeGroup "com.google.code.gson"
                includeGroup "com.google.code.findbugs"
                includeGroup "org.checkerframework"
                includeGroup "javax.inject"
                includeGroup "javax.xml.bind"
                includeGroupByRegex "org\\.codehaus.*"
                includeGroup "org.bouncycastle"
                includeGroup "org.ow2.asm"
                includeGroup "it.unimi.dsi"
                includeGroup "net.sf.jopt-simple"
                includeGroup "net.sf.kxml"
                includeGroup "org.apache.commons"
                includeGroup "org.apache.httpcomponents"
                includeGroup "com.sun.activation"
                includeGroup "org.glassfish.jaxb"
                includeGroup "org.jvnet.staxex"
                includeGroup "com.sun.xml.fastinfoset"
                includeGroup "com.sun.istack"
            }
        }
        maven {
            url "http://jcenter.bintray.com/"
            content {
                includeGroup "org.jetbrains.trove4j"
                includeGroup "com.xwray"
                includeGroup "org.koin"
            }
        }
        maven {
            url "https://dl.bintray.com/kotlin/ktor"
            content {
                includeGroup "io.ktor"
            }
        }
    }

    configurations.all {
        resolutionStrategy {
            eachDependency { details ->
                if (details.requested.group == 'com.squareup.okhttp3') {
                    details.useVersion Versions.okhttp
                }
            }
        }
    }
}

subprojects {
    apply plugin: 'com.diffplug.gradle.spotless'
    spotless {
        kotlin {
            target "**/*.kt"
            ktlint(Versions.ktlint)
        }
    }

    afterEvaluate {
        def preBuildTask = tasks.findByName("preBuild")
        if (preBuildTask != null) {
            preBuild.dependsOn spotlessKotlinApply
            return
        }

        def compileKotlinTask = tasks.findByName("compileKotlin")
        if (compileKotlinTask != null) {
            compileKotlin.dependsOn spotlessKotlinApply
            return
        }
    }
}

task clean(type: Delete) {
    delete rootProject.buildDir
}
